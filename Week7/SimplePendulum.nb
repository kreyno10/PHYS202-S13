(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[     55019,       1037]
NotebookOptionsPosition[     54420,       1013]
NotebookOutlinePosition[     54755,       1028]
CellTagsIndexPosition[     54712,       1025]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", "9.8"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"grav", ".", " ", "constant"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"l", "=", "0.5"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"length", " ", "of", " ", "pendulum"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"\[Theta]0", "=", 
   RowBox[{"20", "*", 
    RowBox[{"\[Pi]", "/", "180"}]}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"20", " ", "degrees"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"\[Omega]0", " ", "=", " ", "0"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"starting", " ", "from", " ", "rest"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Phi]", "=", "y"}], ";", "\[IndentingNewLine]", 
    RowBox[{"t", "=", "x"}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ode1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"g", "/", "l"}], ")"}]}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "\[Theta]0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", 
      "\[Omega]0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"ode1", ",", "\[Theta]", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4941618998598137`*^9, 3.4941619588657084`*^9}, 
   3.49416200170741*^9, {3.494162159839367*^9, 3.494162264850087*^9}, {
   3.4941622953964167`*^9, 3.494162314363269*^9}, {3.494162429878344*^9, 
   3.494162429931975*^9}, {3.494162689372713*^9, 3.494162709813946*^9}, {
   3.4941627527093143`*^9, 3.494162752876684*^9}, {3.494162969971979*^9, 
   3.494162984039895*^9}, {3.494163074268774*^9, 3.494163197175642*^9}, {
   3.4941632664519243`*^9, 3.494163266509802*^9}, {3.494163302388669*^9, 
   3.494163302618104*^9}, {3.494167125909374*^9, 3.494167127043168*^9}, {
   3.494178629013938*^9, 3.4941786941328583`*^9}, {3.494178743416378*^9, 
   3.494178753982154*^9}, {3.494178806776251*^9, 3.49417889255365*^9}, {
   3.577548930912209*^9, 3.577549058993216*^9}, {3.5780686981234694`*^9, 
   3.578068720687434*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myplot1", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"180", "/", "Pi"}], ")"}], " ", 
       RowBox[{"\[Theta]", "[", "t", "]"}]}], "/.", "sol"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"omega", "=", 
   SqrtBox[
    RowBox[{"(", 
     RowBox[{"g", "/", "l"}], ")"}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.494162004524008*^9, 3.494162076852659*^9}, {
   3.494162433062894*^9, 3.494162433108081*^9}, {3.494162592059354*^9, 
   3.4941625983662167`*^9}, {3.494162757151064*^9, 3.494162787005321*^9}, {
   3.4941628547936563`*^9, 3.494162856894761*^9}, {3.494162887335985*^9, 
   3.494162892983869*^9}, {3.494162976794415*^9, 3.494163001498172*^9}, {
   3.494163071893292*^9, 3.4941630719595547`*^9}, {3.494163240196003*^9, 
   3.494163243631948*^9}, {3.494178674109873*^9, 3.494178699548072*^9}, {
   3.577549065982582*^9, 3.577549072700952*^9}, 3.577549145166576*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"approx", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"180", "/", "Pi"}], ")"}], " ", "\[Theta]0", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"omega", "*", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myplot2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"approx", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.4941620805077047`*^9, 3.494162130559312*^9}, {
  3.494162438686253*^9, 3.4941624388214483`*^9}, {3.49416276111087*^9, 
  3.4941627612842607`*^9}, {3.494163076540534*^9, 3.494163076603696*^9}, {
  3.4941632000470552`*^9, 3.494163201262197*^9}, {3.494163247872136*^9, 
  3.494163268710841*^9}, {3.494163305169607*^9, 3.494163305408745*^9}, {
  3.4941671378365726`*^9, 3.494167137896326*^9}, {3.494178681693411*^9, 
  3.494178704379784*^9}, {3.577549081756276*^9, 3.5775491266935997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Show", "[", 
   RowBox[{"{", 
    RowBox[{"myplot1", ",", "myplot2"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.494162134647728*^9, 3.4941621507573*^9}, {
  3.4941622413147984`*^9, 3.494162255928239*^9}, {3.494162609064744*^9, 
  3.494162610408478*^9}, {3.494163058283469*^9, 3.494163060738275*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\({\\*GraphicsBox[List[List[List[], List[], \
List[Hue[0.67`, 0.6`, 0.6`], RGBColor[0, 0, 1], \
LineBox[List[Skeleton[1897]]]]]], List[Rule[AspectRatio, \
NCache[Power[GoldenRatio, -1], 0.6180339887498948`]], Rule[Axes, True], \
Rule[AxesOrigin, List[0, 0]], Rule[PlotRange, List[All, All]], \
Rule[PlotRangeClipping, True], Rule[PlotRangePadding, List[Automatic, \
Automatic]]]], myplot2}\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", ButtonNote -> \
\\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.578068711587758*^9, 3.578068727978444*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[{{}, {}, 
      {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
sqk4/gdT/5+F
        "]]}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->True,
     AxesOrigin->{0, 0},
     PlotRange->{All, All},
     PlotRangeClipping->True,
     PlotRangePadding->{Automatic, Automatic}], ",", "myplot2"}], "}"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.4941670604568167`*^9, 3.494167141595954*^9, 3.4941789048121853`*^9, 
   3.5775491591298018`*^9, {3.57806871160185*^9, 3.578068727996276*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"g", "=", "9.8"}], ";", " ", 
    RowBox[{"l", "=", "0.5"}], ";", " ", 
    RowBox[{"omega", "=", 
     SqrtBox[
      RowBox[{"(", 
       RowBox[{"g", "/", "l"}], ")"}]]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"g", "/", "l"}], ")"}]}], "*", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "\[Theta]0"}], 
            ",", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", 
             "\[Omega]0"}]}], "}"}], ",", "\[Theta]", ",", " ", 
          RowBox[{"{", 
           RowBox[{"t", ",", " ", "0", ",", "20"}], "}"}]}], "]"}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"180", "/", "Pi"}], ")"}], " ", "\[Theta]0", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"omega", "*", "t"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"180", "/", "Pi"}], ")"}], "*", " ", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], "/.", "result"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "Blue", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", "Red"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<t (s)\>\"", ",", "\"\<\[Theta] (rad)\>\""}], "}"}]}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "20"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "300"}], "}"}]}]}], "]"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l", ",", "0.5", ",", "\"\<length (m)\>\""}], "}"}], ",", "0", 
     ",", "2", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]0", ",", 
       RowBox[{"20", "*", 
        RowBox[{"Pi", "/", "180"}]}], ",", "\"\<initial angle (rad)\>\""}], 
      "}"}], ",", ".1", ",", 
     RowBox[{"\[Pi]", "/", "2"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]0", ",", "0", ",", "\"\<initial speed (rad/s)\>\""}], 
      "}"}], ",", "0", ",", "10.", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.577478475599698*^9, 3.5774784997979183`*^9}, {
   3.577478534848688*^9, 3.577478567062739*^9}, 3.577490072664493*^9, {
   3.577502720630567*^9, 3.5775027514202127`*^9}, 3.5775030057285748`*^9, 
   3.577503078429886*^9, {3.577503108611413*^9, 3.577503166858922*^9}, {
   3.577549179281249*^9, 3.577549221102922*^9}, {3.577549268358193*^9, 
   3.577549405114224*^9}, {3.577549553049855*^9, 3.577549582375984*^9}, 
   3.577549627541086*^9, {3.57754973813801*^9, 3.577549829233026*^9}, {
   3.57754987411872*^9, 3.5775499131013613`*^9}, {3.577549955916011*^9, 
   3.5775499892251*^9}, {3.577550221132785*^9, 3.5775502214075537`*^9}, {
   3.577550744443714*^9, 3.5775508053235483`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`l$$ = 0.5, $CellContext`\[Theta]0$$ = 
    Rational[1, 9] Pi, $CellContext`\[Omega]0$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`l$$], 0.5, "length (m)"}, 0, 2}, {{
       Hold[$CellContext`\[Theta]0$$], Rational[1, 9] Pi, 
       "initial angle (rad)"}, 0.1, Rational[1, 2] Pi}, {{
       Hold[$CellContext`\[Omega]0$$], 0, "initial speed (rad/s)"}, 0, 10.}}, 
    Typeset`size$$ = {500., {148., 152.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, $CellContext`l$4375$$ =
     0, $CellContext`\[Theta]0$4376$$ = 0, $CellContext`\[Omega]0$4377$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`l$$ = 0.5, $CellContext`\[Theta]0$$ = 
        Rational[1, 9] Pi, $CellContext`\[Omega]0$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`l$$, $CellContext`l$4375$$, 0], 
        Hold[$CellContext`\[Theta]0$$, $CellContext`\[Theta]0$4376$$, 0], 
        Hold[$CellContext`\[Omega]0$$, $CellContext`\[Omega]0$4377$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`g = 9.8; $CellContext`l$$ = 
        0.5; $CellContext`omega = ($CellContext`g/$CellContext`l$$)^
         Rational[1, 2]; 
       Module[{$CellContext`result$ = 
          NDSolve[{
            Derivative[
              2][$CellContext`\[Theta]][$CellContext`t] == \
(-($CellContext`g/$CellContext`l$$)) Sin[
                $CellContext`\[Theta][$CellContext`t]], $CellContext`\[Theta][
              0] == $CellContext`\[Theta]0$$, 
             Derivative[1][$CellContext`\[Theta]][
              0] == $CellContext`\[Omega]0$$}, $CellContext`\[Theta], \
{$CellContext`t, 0, 20}]}, 
         Plot[{((180/Pi) $CellContext`\[Theta]0$$) 
           Cos[$CellContext`omega $CellContext`t], 
           
           ReplaceAll[(180/
             Pi) $CellContext`\[Theta][$CellContext`t], \
$CellContext`result$]}, {$CellContext`t, 0, 20}, 
          PlotStyle -> {{Blue}, {Dashed, Red}}, PlotRange -> All, 
          AxesLabel -> {"t (s)", "\[Theta] (rad)"}, 
          PlotRange -> {{0, 20}, {-20, 20}}, ImageSize -> {500, 300}]]), 
      "Specifications" :> {{{$CellContext`l$$, 0.5, "length (m)"}, 0, 2, 
         Appearance -> 
         "Labeled"}, {{$CellContext`\[Theta]0$$, Rational[1, 9] Pi, 
          "initial angle (rad)"}, 0.1, Rational[1, 2] Pi, Appearance -> 
         "Labeled"}, {{$CellContext`\[Omega]0$$, 0, "initial speed (rad/s)"}, 
         0, 10., Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{545., {219., 224.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.577503168951933*^9, 3.5775031800122957`*^9}, 
   3.5775496308879547`*^9, {3.577549817433275*^9, 3.577549831097909*^9}, 
   3.577549914925475*^9, {3.57754995775905*^9, 3.577549989572948*^9}, 
   3.577550763233276*^9, 3.577550806163776*^9}]
}, Open  ]]
},
WindowSize->{799, 739},
WindowMargins->{{20, Automatic}, {Automatic, 0}},
FrontEndVersion->"8.0 for Linux x86 (64-bit) (October 10, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 2453, 57, 183, "Input"],
Cell[3001, 79, 1272, 29, 83, "Input"],
Cell[4276, 110, 1142, 25, 50, "Input"],
Cell[CellGroupData[{
Cell[5443, 139, 364, 7, 50, "Input"],
Cell[5810, 148, 877, 16, 65, "Message"],
Cell[6690, 166, 39696, 658, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46423, 829, 4320, 109, 263, "Input"],
Cell[50746, 940, 3658, 70, 460, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
